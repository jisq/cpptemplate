function template, instantiations, multiple overload instantiations, developer, email, edit time, definition file path, line
operator!=, //19, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //522
operator%, //5, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //475
operator&, //37, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //494
operator&, //36, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //499
operator*, //40, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //470
operator+, //7, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //455
operator+=, //1, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //481
operator-, //5, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //460
operator-=, //1, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //487
operator/, //1, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //465
operator<, //7, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //506
operator<=, //1, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //514
operator==, //14, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //526
operator>, //6, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //510
operator>=, //1, //1, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //518
swap_struct_t::operator!=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //280
swap_struct_t::operator&, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //334
swap_struct_t::operator&=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //342
swap_struct_t::operator*, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //200
swap_struct_t::operator+, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //209
swap_struct_t::operator+=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //227
swap_struct_t::operator-, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //217
swap_struct_t::operator-=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //237
swap_struct_t::operator/, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //191
swap_struct_t::operator<, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //298
swap_struct_t::operator<<, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //382
swap_struct_t::operator<<=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //386
swap_struct_t::operator<=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //316
swap_struct_t::operator=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //161
swap_struct_t::operator==, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //271
swap_struct_t::operator>, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //289
swap_struct_t::operator>=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //307
swap_struct_t::operator>>, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //392
swap_struct_t::operator>>=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //396
swap_struct_t::operator^, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //368
swap_struct_t::operator^=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //376
swap_struct_t::operator|, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //351
swap_struct_t::operator|=, //0, //0, //ShizZy, //shizzy@6bit.net, //20130918, //src/common/swap.h, //359
assert_noinline_call, //32, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150218, //src/common/assert.h, //24
Common::make_unique, //12, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141220, //src/common/make_unique.h, //12
MakeResult, //12, //4, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141023, //src/core/hle/result.h, //405
Common::SynchronizedWrapper::SynchronizedWrapper, //1, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150205, //src/common/synchronized_wrapper.h, //20
ConfigMem::Read, //5, //1, //purpasmart96, //kanzoconfigz@hotmail.com, //20150212, //src/core/hle/config_mem.cpp, //50
SharedPage::Read, //5, //1, //Zhuowei Zhang, //zhuoweizhang@yahoo.com, //20150101, //src/core/hle/shared_page.cpp, //53
Memory::Read, //4, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20140828, //src/core/mem_map_funcs.cpp, //53
Memory::Write, //4, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20140828, //src/core/mem_map_funcs.cpp, //104
Service::Interface::Register, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150130, //src/core/hle/service/service.h, //99
Math::Vec2::operator*, //6, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //102
Math::Vec3::operator*, //2, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //232
Math::Vec4::operator*, //4, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //402
detail::ScopeExit, //4, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141102, //src/common/scope_exit.h, //20
LCD::Read, //1, //1, //archshift, //gh@archshift.com, //20141012, //src/core/hw/lcd.cpp, //17
MathUtil::Clamp, //7, //1, //Lioncash, //mathew1800@gmail.com, //20140818, //src/common/math_util.h, //17
FileUtil::IOFile::ReadArray, //5, //1, //Emmanuel Gil Peyrot, //linkmauve@linkmauve.fr, //20140912, //src/common/file_util.h, //168
LinearDiskCache::Read, //5, //1, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/linear_disk_cache.h, //164
LinearDiskCache::Write, //5, //1, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/linear_disk_cache.h, //158
LCD::Write, //12, //1, //archshift, //gh@archshift.com, //20141012, //src/core/hw/lcd.cpp, //31
HLE::Wrap, //0, //0, //bunnei, //bunneidev@gmail.com, //20140609, //src/core/hle/function_wrappers.h, //158
Common::FifoQueue::Push, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/fifo_queue.h, //43
HLE::Wrap, //0, //0, //bunnei, //bunneidev@gmail.com, //20140609, //src/core/hle/function_wrappers.h, //154
Common::CharArrayFromFormat, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/string_util.h, //28
Common::ComparePartialString, //7, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141104, //src/common/string_util.h, //123
Common::ThousandSeparate, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/string_util.h, //44
Common::TryParse, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/string_util.h, //63
HW::Read, //2, //1, //bunnei, //bunneidev@gmail.com, //20140404, //src/core/hw/hw.cpp, //14
HW::Write, //2, //1, //bunnei, //bunneidev@gmail.com, //20140404, //src/core/hw/hw.cpp, //28
Log::GetClassByName, //1, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141206, //src/common/logging/filter.cpp, //65
Log::GetLevelByName, //1, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141206, //src/common/logging/filter.cpp, //54
Log::find_last, //1, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141206, //src/common/logging/filter.cpp, //76
GPU::Read, //5, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140716, //src/core/hw/gpu.cpp, //44
GPU::Write, //6, //1, //bunnei, //bunneidev@gmail.com, //20140405, //src/core/hw/gpu.cpp, //58
Common::CodeToUTF8, //3, //1, //archshift, //gh@archshift.com, //20141110, //src/common/string_util.cpp, //471
Math::Cross, //1, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //550
Math::Dot, //2, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //538
Math::MakeVec, //9, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //589
Math::MakeVec, //34, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //577
Math::MakeVec, //6, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //628
Math::Vec3::Cast, //17, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //189
Math::Vec3::operator/, //5, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //242
Math::Vec4::Cast, //2, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //360
Math::Vec4::operator/, //3, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //412
Math::operator*, //43, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //326
ResultVal::ValueOr, //3, //1, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141023, //src/core/hle/result.h, //358
ResultVal::WithCode, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141023, //src/core/hle/result.h, //278
ResultVal::emplace, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141023, //src/core/hle/result.h, //331
Math::Dot, //3, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //544
Math::MakeVec, //37, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //601
Math::Vec2::operator*=, //3, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //107
Math::Vec4::operator*=, //1, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //407
FileUtil::IOFile::WriteArray, //1, //1, //Emmanuel Gil Peyrot, //linkmauve@linkmauve.fr, //20140912, //src/common/file_util.h, //183
OpenFStream, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/file_util.h, //239
Math::Dot, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //532
Math::Lerp, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //557
Math::LerpInt, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //564
Math::MakeVec, //30, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //571
Math::MakeVec, //8, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //583
Math::MakeVec, //6, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //595
Math::MakeVec, //5, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //607
Math::MakeVec, //4, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //613
Math::MakeVec, //3, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //622
Math::MakeVec, //1, //1, //Emmanuel Gil Peyrot, //linkmauve@linkmauve.fr, //20150216, //src/video_core/math.h, //634
Math::Vec2::Cast, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //63
Math::Vec2::operator/, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //112
Math::Vec2::operator/=, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //117
Math::Vec3::operator*=, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //237
Math::Vec3::operator/=, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //247
Math::Vec4::operator/=, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //417
Math::operator*, //57, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140727, //src/video_core/math.h, //167
Math::operator*, //23, //1, //Tony Wasserka, //neobrainx@gmail.com, //20140812, //src/video_core/math.h, //523
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //215
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //230
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //275
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //290
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //335
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/chunk_file.h, //342
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //357
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //384
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //391
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //410
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //417
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //424
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //444
PointerWrap::Do, //14, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //458
PointerWrap::Do, //27, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //556
PointerWrap::DoArray, //2, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //551
PointerWrap::DoClass, //1, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //535
PointerWrap::DoClass, //1, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //540
PointerWrap::DoDeque, //2, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //398
PointerWrap::DoLinkedList, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/chunk_file.h, //575
PointerWrap::DoList, //2, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //430
PointerWrap::DoMap, //2, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //237
PointerWrap::DoMultimap, //2, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //297
PointerWrap::DoPOD, //0, //0, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //350
PointerWrap::DoPOD, //0, //0, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //561
PointerWrap::DoPointer, //0, //0, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //566
PointerWrap::DoSet, //2, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //464
PointerWrap::DoVector, //3, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //363
PointerWrap::DoVectorPOD, //1, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //373
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //38
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //42
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //49
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //57
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //61
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //68
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //72
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //76
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //83
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //87
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //94
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //98
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //103
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //110
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //117
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //124
HLE::Wrap, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/function_wrappers.h, //131
HLE::Wrap, //0, //0, //bunnei, //bunneidev@gmail.com, //20140609, //src/core/hle/function_wrappers.h, //140
HLE::Wrap, //0, //0, //bunnei, //bunneidev@gmail.com, //20140814, //src/core/hle/function_wrappers.h, //147

generic function-like macro, instantiations, multiple overload instantiations, developer, email, edit time, definition file path, line
ASSERT_MSG, //20, //4, //archshift, //gh@archshift.com, //20150120, //src/common/assert.h, //37
ARRAY_SIZE, //2, //2, //ShizZy, //shizzy@6bit.net, //20130905, //src/common/common_funcs.h, //25
LOG_DEBUG, //83, //18, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141028, //src/common/logging/log.h, //107
LOG_ERROR, //143, //40, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141028, //src/common/logging/log.h, //110
POS, //12, //2, //Lioncash, //mathew1800@gmail.com, //20150105, //src/core/arm/skyeye_common/armdefs.h, //49
LOG_WARNING, //68, //13, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141028, //src/common/logging/log.h, //109
LOG_CRITICAL, //60, //12, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141028, //src/common/logging/log.h, //111
SCOPE_EXIT, //4, //2, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150111, //src/common/scope_exit.h, //40
vfp_double_packed_abs, //2, //2, //bunnei, //bunneidev@gmail.com, //20140515, //src/core/arm/skyeye_common/vfp/vfp_helper.h, //330
ASSERT, //7, //4, //archshift, //gh@archshift.com, //20150120, //src/common/assert.h, //31
LOG_INFO, //12, //6, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20141028, //src/common/logging/log.h, //108
DEBUG_ASSERT, //10, //2, //archshift, //gh@archshift.com, //20150120, //src/common/assert.h, //51
INSERT_PADDING_BYTES, //15, //2, //archshift, //gh@archshift.com, //20150218, //src/common/common_funcs.h, //34
BIT, //250, //12, //Lioncash, //mathew1800@gmail.com, //20150131, //src/core/arm/skyeye_common/armdefs.h, //25
BITS, //634, //19, //Lioncash, //mathew1800@gmail.com, //20150131, //src/core/arm/skyeye_common/armdefs.h, //24
ERRNO, //36, //36, //Subv, //subv2112@gmail.com, //20141208, //src/core/hle/service/soc_u.cpp, //44
INC_PC, //140, //62, //bunnei, //bunneidev@gmail.com, //20140912, //src/core/arm/dyncom/arm_dyncom_interpreter.cpp, //3721
ROTATE_RIGHT_32, //15, //4, //bunnei, //bunneidev@gmail.com, //20140912, //src/core/arm/dyncom/arm_dyncom_interpreter.cpp, //45
UPDATE_NFLAG, //18, //2, //bunnei, //bunneidev@gmail.com, //20140912, //src/core/arm/dyncom/arm_dyncom_interpreter.cpp, //3935
UPDATE_ZFLAG, //18, //2, //bunnei, //bunneidev@gmail.com, //20140912, //src/core/arm/dyncom/arm_dyncom_interpreter.cpp, //3936

function implemented with void*, instantiations, multiple overload instantiations, developer, email, edit time, definition file path, line
SVC::GetResourceLimitCurrentValues, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/svc.cpp, //306
SVC::QueryMemory, //0, //0, //Yuri Kunde Schlesner, //yuriks@yuriks.net, //20150123, //src/core/hle/svc.cpp, //435
MemArena::CreateView, //2, //1, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/mem_arena.cpp, //162
MemArena::ReleaseView, //4, //1, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/mem_arena.cpp, //186
FileUtil::IOFile::ReadBytes, //18, //1, //Emmanuel Gil Peyrot, //linkmauve@linkmauve.fr, //20140912, //src/common/file_util.h, //197
BreakPointObserverDock::OnPicaBreakPointHit, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20141219, //src/citra_qt/debugger/graphics_breakpoint_observer.cpp, //24
Pica::DebugContext::BreakPointObserver::OnPicaBreakPointHit, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20141025, //src/video_core/debug_utils/debug_utils.h, //70
FileUtil::IOFile::WriteBytes, //3, //1, //Emmanuel Gil Peyrot, //linkmauve@linkmauve.fr, //20140912, //src/common/file_util.h, //202
GraphicsFramebufferWidget::OnBreakPointHit, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20141026, //src/citra_qt/debugger/graphics_framebuffer.cpp, //113
ElfReader::ElfReader, //1, //1, //bunnei, //bunneidev@gmail.com, //20140616, //src/core/loader/elf.cpp, //223
Pica::DebugContext::OnEvent, //5, //1, //Tony Wasserka, //neobrainx@gmail.com, //20141025, //src/video_core/debug_utils/debug_utils.cpp, //36
FreeAlignedMemory, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/memory_util.cpp, //141
FreeMemoryPages, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/memory_util.cpp, //125
UnWriteProtectMemory, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/memory_util.cpp, //164
WriteProtectMemory, //0, //0, //ShizZy, //shizzy@6bit.net, //20130904, //src/common/memory_util.cpp, //153
GraphicsBreakPointsWidget::OnBreakPointHit, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20141025, //src/citra_qt/debugger/graphics_breakpoints.cpp, //211
GraphicsBreakPointsWidget::OnPicaBreakPointHit, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20141025, //src/citra_qt/debugger/graphics_breakpoints.cpp, //205
GraphicsVertexShaderWidget::OnBreakPointHit, //0, //0, //Tony Wasserka, //neobrainx@gmail.com, //20141210, //src/citra_qt/debugger/graphics_vertex_shader.cpp, //292
PointerWrap::DoVoid, //2, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //195
PointerWrap::ExpectVoid, //2, //1, //ShizZy, //shizzy@6bit.net, //20130919, //src/common/chunk_file.h, //175

